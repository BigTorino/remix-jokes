{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\victo\\Desktop\\Hamal\\remix\\remix-jokes\\app\\routes\\jokes\\$jokeId.tsx?browser", "../../../../app/routes/jokes/$jokeId.tsx"],
  "sourcesContent": ["export { CatchBoundary, ErrorBoundary, default, meta } from \"C:\\\\Users\\\\victo\\\\Desktop\\\\Hamal\\\\remix\\\\remix-jokes\\\\app\\\\routes\\\\jokes\\\\$jokeId.tsx\";", "import type {\r\n  LoaderFunction,\r\n  ActionFunction,\r\n  MetaFunction\r\n} from \"remix\";\r\nimport {\r\n  Link,\r\n  useLoaderData,\r\n  useCatch,\r\n  redirect,\r\n  useParams\r\n} from \"remix\";\r\nimport type { Joke } from \"@prisma/client\";\r\nimport { db } from \"~/utils/db.server\";\r\nimport { requireUserId } from \"~/utils/session.server\";\r\n\r\nexport const meta: MetaFunction = ({\r\n  data\r\n}: {\r\n  data: LoaderData | undefined;\r\n}) => {\r\n  if (!data) {\r\n    return {\r\n      title: \"No joke\",\r\n      description: \"No joke found\"\r\n    };\r\n  }\r\n  return {\r\n    title: `\"${data.joke.name}\" joke`,\r\n    description: `Enjoy the \"${data.joke.name}\" joke and much more`\r\n  };\r\n};\r\n\r\ntype LoaderData = { joke: Joke };\r\n\r\nexport const loader: LoaderFunction = async ({\r\n  params\r\n}) => {\r\n  const joke = await db.joke.findUnique({\r\n    where: { id: params.jokeId }\r\n  });\r\n  if (!joke) {\r\n    throw new Response(\"What a joke! Not found.\", {\r\n      status: 404\r\n    });\r\n  }\r\n  const data: LoaderData = { joke };\r\n  return data;\r\n};\r\n\r\nexport const action: ActionFunction = async ({\r\n  request,\r\n  params\r\n}) => {\r\n  const form = await request.formData();\r\n  if (form.get(\"_method\") === \"delete\") {\r\n    const userId = await requireUserId(request);\r\n    const joke = await db.joke.findUnique({\r\n      where: { id: params.jokeId }\r\n    });\r\n    if (!joke) {\r\n      throw new Response(\r\n        \"Can't delete what does not exist\",\r\n        { status: 404 }\r\n      );\r\n    }\r\n    if (joke.jokesterId !== userId) {\r\n      throw new Response(\r\n        \"Pssh, nice try. That's not your joke\",\r\n        {\r\n          status: 401\r\n        }\r\n      );\r\n    }\r\n    await db.joke.delete({ where: { id: params.jokeId } });\r\n    return redirect(\"/jokes\");\r\n  }\r\n};\r\n\r\nexport default function JokeRoute() {\r\n  const data = useLoaderData<LoaderData>();\r\n\r\n  return (\r\n    <div>\r\n      <p>Here's your hilarious joke:</p>\r\n      <p>{data.joke.content}</p>\r\n      <Link to=\".\">{data.joke.name} Permalink</Link>\r\n      <form method=\"post\">\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"_method\"\r\n          value=\"delete\"\r\n        />\r\n        <button type=\"submit\" className=\"button\">\r\n          Delete\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  const caught = useCatch();\r\n  const params = useParams();\r\n  switch (caught.status) {\r\n    case 404: {\r\n      return (\r\n        <div className=\"error-container\">\r\n          Huh? What the heck is {params.jokeId}?\r\n        </div>\r\n      );\r\n    }\r\n    case 401: {\r\n      return (\r\n        <div className=\"error-container\">\r\n          Sorry, but {params.jokeId} is not your joke.\r\n        </div>\r\n      );\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled error: ${caught.status}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport function ErrorBoundary() {\r\n  const { jokeId } = useParams();\r\n  return (\r\n    <div className=\"error-container\">{`There was an error loading joke by the id ${jokeId}. Sorry.`}</div>\r\n  );\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAaA,gBAAmB;AACnB,qBAA8B;AAEvB,IAAM,OAAqB,CAAC;AAAA,EACjC;AAAA,MAGI;AACJ,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA;AAAA;AAGjB,SAAO;AAAA,IACL,OAAO,IAAI,KAAK,KAAK;AAAA,IACrB,aAAa,cAAc,KAAK,KAAK;AAAA;AAAA;AAkD1B,qBAAqB;AAClC,QAAM,OAAO;AAEb,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,gCACH,oCAAC,KAAD,MAAI,KAAK,KAAK,UACd,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAK,KAAK,KAAK,MAAK,eAC7B,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,MAER,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS;AAAA;AAQ1C,yBAAyB;AAC9B,QAAM,SAAS;AACf,QAAM,SAAS;AACf,UAAQ,OAAO;AAAA,SACR,KAAK;AACR,aACE,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,0BACR,OAAO,QAAO;AAAA;AAAA,SAItC,KAAK;AACR,aACE,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,eACnB,OAAO,QAAO;AAAA;AAAA,aAIvB;AACP,YAAM,IAAI,MAAM,oBAAoB,OAAO;AAAA;AAAA;AAAA;AAK1C,yBAAyB;AAC9B,QAAM,EAAE,WAAW;AACnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAmB,6CAA6C;AAAA;",
  "names": []
}
